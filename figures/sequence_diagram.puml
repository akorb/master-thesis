@startuml sequence diagram
!pragma teoz true

skinparam NoteTextAlignment center

actor "Verifier"

== Initialization ==

note over "fTPM TA": Triggered only once\nat any first interaction\nwith fTPM

"fTPM TA" -> "Attestation\nPTA" ++: Hash me

"Attestation\nPTA" -> "fTPM TA": Read memory
"Attestation\nPTA" -> "Attestation\nPTA": Hash fTPM memory
"fTPM TA" <-- "Attestation\nPTA" --: fTPM hash

' Formula (2) from https://trustedcomputinggroup.org/wp-content/uploads/Hardware-Requirements-for-Device-Identifier-Composition-Engine-r78_For-Publication.pdf
"fTPM TA" -> "fTPM TA": EPS = HMAC(CDI, "EPS")
"fTPM TA" -> "fTPM TA": Inject EPS

"fTPM TA" -> "fTPM TA": Generate EK ' with\nTPM2_CreatePrimary
"fTPM TA" -> "fTPM TA": Create EKCert ' with EKPub as subject\nsigned by OP-TEE private key\ncontaining the hash of the fTPM TA


== Attestation process ==

"Verifier" -> "User space\napplication" ++: PCR list + Nonce

"User space\napplication" -> "fTPM TA" ++: Forward
"User space\napplication" <-- "fTPM TA" --: Evidence =\nQuote incl. Nonce\nsigned by EKpriv,\nDICE cert chain incl. EKCert
"Verifier" <-- "User space\napplication" --: Evidence

"Verifier" -> "Verifier": Make security decision\nregarding own policy\nbased on provided evidence

box "Prover"
    box "Normal World\n        (Linux)" #Salmon
    participant "User space\napplication"
    participant "User space\napplication"
    end box

    box "Secure World (OP-TEE)" #LightBlue
    participant "fTPM TA"
    participant "Attestation\nPTA"
    end box
end box

@enduml
