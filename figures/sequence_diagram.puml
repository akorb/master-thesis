@startuml sequence diagram



actor "3rd party\nattester"

"User space\napplication" -> "Kernel module" ++: First TPM command
"Kernel module" -> "fTPM TA" ++: Forward

== Initialization ==

"fTPM TA" -> "RA PTA" ++: Hash me

"RA PTA" -> "fTPM TA": Read memory
"RA PTA" -> "RA PTA": Hash fTPM memory
"fTPM TA" <-- "RA PTA" --: fTPM hash

' Formula (2) from https://trustedcomputinggroup.org/wp-content/uploads/Hardware-Requirements-for-Device-Identifier-Composition-Engine-r78_For-Publication.pdf
"fTPM TA" -> "fTPM TA": EPS =\nHMAC(OP-TEE private key,\nfTPM hash)
"fTPM TA" -> "fTPM TA": Inject EPS

"fTPM TA" -> "fTPM TA": Generate and get EKPub\nwith TPM2_CreatePrimary
"fTPM TA" -> "fTPM TA": Create EKCert with EKPub\nsigned by OP-TEE private key

"fTPM TA" -> "fTPM TA": Execute TPM command


"Kernel module" <-- "fTPM TA" --: Return result
"User space\napplication" <-- "Kernel module" --: Return result


== Attestation process ==

"3rd party\nattester" -> "User space\napplication" ++: Attestation request\nwith PCR list
"User space\napplication" -> "Kernel module" ++: Forward

"Kernel module" -> "fTPM TA" ++: Forward
"Kernel module" <-- "fTPM TA" --: Quote
"Kernel module" -> "fTPM TA": Get auxiliary
"Kernel module" <-- "fTPM TA": Certificate chain
"Kernel module" -> "Kernel module": Evidence = Quote\n+ Certificate chain
"User space\napplication" <-- "Kernel module" --: Evidence
"3rd party\nattester" <-- "User space\napplication" --: Evidence


box "Normal World (Linux)" #Salmon
participant "User space\napplication"
participant "Kernel module"
end box

box "Secure World (OP-TEE)" #LightBlue
participant "fTPM TA"
participant "RA PTA"
end box

@enduml
